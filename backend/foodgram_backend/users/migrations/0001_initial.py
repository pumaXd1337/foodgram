# Generated by Django 4.2.19 on 2025-04-22 18:39

import django.contrib.auth.models
import django.core.validators
from django.db import migrations, models
import django.utils.timezone


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='User',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('email', models.EmailField(max_length=254, unique=True, verbose_name='Адрес электронной почты')),
                ('username', models.CharField(error_messages={'unique': 'Пользователь с таким именем пользователя уже существует'}, help_text='Обязательное поле. Не более 150 символов. Только буквы, цифры и символы @/./+/-/_', max_length=150, unique=True, validators=[django.core.validators.RegexValidator(flags=0, message='Имя пользователя может содержать только буквы (a-z, A-Z, включая русские), цифры (0-9) и символы @ . + - _', regex='^[\\w.@+-]+$')], verbose_name='Имя пользователя')),
                ('first_name', models.CharField(max_length=150, verbose_name='Имя')),
                ('last_name', models.CharField(max_length=150, verbose_name='Фамилия')),
                ('is_staff', models.BooleanField(default=False, help_text='Определяет, имеет ли пользователь доступ к панели администратора', verbose_name='Статус персонала')),
                ('is_active', models.BooleanField(default=True, help_text='Определяет, следует ли считать этого пользователя активным.\nСнимите этот флажок вместо удаления учетной записи.', verbose_name='Активный')),
                ('is_superuser', models.BooleanField(default=False, help_text='Определяет, что пользователь имеет все права без явного их назначения.', verbose_name='Статус администратора')),
                ('avatar', models.ImageField(blank=True, help_text='Загрузите ваш аватар', null=True, upload_to='avatars/', verbose_name='Аватар')),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.permission', verbose_name='user permissions')),
            ],
            options={
                'verbose_name': 'Пользователь',
                'verbose_name_plural': 'Пользователи',
                'ordering': ['username'],
            },
            managers=[
                ('objects', django.contrib.auth.models.UserManager()),
            ],
        ),
    ]
